<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<import resource="persistance-beans.xml"/>

<!--JobRepositoey and JobLauncher are configuration/setup classes  -->

<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>
<bean id ="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
<property name="jobRepository" ref="jobRepository"/>
</bean>

<!-- ItemReader which read from database and returns the row mapped by rowMapper -->

<bean id ="dbItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
<property name="dataSource" ref="dbcpDs" />
<property name="sql" value="SELECT ID,SEMESTER, DOB, PERCENTAGE FROM EXAM_RESULT"/>
<property name="rowMapper">
<bean class="com.mhb.rowmapper.ExamResultMapper"/>
</property>
</bean>


<!--ItemWriter writes a line into CSV file  -->

<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
<property name="resource" value="file:csv/SuperBrains.xls" />
<property name="lineAggregator">

<!--An Aggregator which convert an object into delimited list of strings  -->

<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
<property name="delimiter" value=","/>
<property name="fieldExtractor">
<!--Extractor which returns the value of beans property through reflection -->

<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
<property name="names" value="id,semester,percentage,dob"/>

</bean>

</property>
</bean>
</property>
</bean>

<!--Optional ItemProcessor to Perform business logic/filtering on the input records -->
<bean id="itemProcessor" class="com.mhb.batch.ExamResultItemProcessor"/>

<!--Step will need a transaction manager  -->
<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

<!--Atual Job  -->
<batch:job id="examResultJob">
<batch:step id="step1">
<batch:tasklet transaction-manager="transactionManager">
<batch:chunk reader="dbItemReader" writer="flatFileItemWriter" processor="itemProcessor" commit-interval="2" />
</batch:tasklet>
</batch:step>
</batch:job>






</beans>
